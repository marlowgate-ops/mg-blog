---
// src/pages/rss.xml.astro  (ASTRO API ROUTE, PRERENDER)
export const prerender = true;

const SITE = "https://blog.marlowgate.com";
const TITLE = "Marlow Gate Blog";
const DESCRIPTION = "Trading data & automation â€” notes, releases, and guides.";

function escapeXml(s="") {
  return s.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
          .replace(/"/g, "&quot;").replace(/'/g, "&apos;");
}

export async function GET() {
  const groups = await Promise.all([
    Astro.glob("../../content/blog/*.{md,mdx}"),
    Astro.glob("../blog/*.{md,mdx}")
  ]);

  const items = groups.flat()
    .filter((p) => p?.frontmatter?.draft !== true)
    .map((p) => ({
      url: SITE + (p.url || p.frontmatter?.url || "/"),
      title: p.frontmatter?.title || "Untitled",
      pubDate: p.frontmatter?.pubDate || p.frontmatter?.date,
      description: p.frontmatter?.description || ""
    }));

  const itemsXml = items.map((it) => `
    <item>
      <title>${escapeXml(it.title)}</title>
      <link>${it.url}</link>
      ${it.pubDate ? `<pubDate>${new Date(it.pubDate).toUTCString()}</pubDate>` : ""}
      ${it.description ? `<description>${escapeXml(it.description)}</description>` : ""}
      <guid>${it.url}</guid>
    </item>
  `).join("");

  const xml = `<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
  <title>${escapeXml(TITLE)}</title>
  <link>${SITE}/</link>
  <description>${escapeXml(DESCRIPTION)}</description>
  ${itemsXml}
</channel>
</rss>`;

  return new Response(xml, {
    headers: { "Content-Type": "application/rss+xml; charset=utf-8" }
  });
}
---