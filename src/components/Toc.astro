---
/**
 * Toc.astro
 * Client-side Table of Contents
 * - Collects h2/h3 inside <article>
 * - Highlights current heading on scroll
 * - No dependencies; safe in static output
 */
const title = "Contents";
---
<aside id="toc" style="position:sticky; top:16px;">
  <div style="font-weight:700; margin-bottom:8px;">{title}</div>
  <nav aria-label="Table of contents">
    <ol id="toc-list" style="list-style:none; padding:0; margin:0; display:flex; flex-direction:column; gap:6px;"></ol>
  </nav>
</aside>

<script>
  // Build TOC from h2/h3 inside the closest <article>
  const container = document.currentScript.closest('html').querySelector('article') || document.querySelector('article');
  const list = document.getElementById('toc-list');
  if (container && list) {
    const headings = Array.from(container.querySelectorAll('h2, h3')).filter(h => h.id);
    headings.forEach(h => {
      const li = document.createElement('li');
      const a = document.createElement('a');
      a.href = `#${h.id}`;
      a.textContent = h.textContent.trim();
      a.style.textDecoration = 'none';
      a.style.color = '#111';
      a.style.fontSize = h.tagName === 'H3' ? '13px' : '14px';
      a.style.paddingLeft = h.tagName === 'H3' ? '12px' : '0px';
      li.appendChild(a);
      list.appendChild(li);
    });

    // Active section highlight
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const id = entry.target.id;
          list.querySelectorAll('a').forEach(a => a.style.fontWeight = a.getAttribute('href') === `#${id}` ? '700' : '400');
        }
      });
    }, { rootMargin: '0px 0px -60% 0px', threshold: 0.1 });
    headings.forEach(h => observer.observe(h));
  }
</script>
